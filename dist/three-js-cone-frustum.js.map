{"version":3,"file":"three-js-cone-frustum.js","sources":["../node_modules/three-js-checker/src/three-check.js","../src/RayIntersect.js","../src/ConeFrustum.js","../src/check-wrapper.js"],"sourcesContent":["export function checkDependancy(packageName, dependancyName, dependancy) {\n    let duplicationMessage = `${packageName}: ${dependancyName} is duplicated. Your bundle includes ${dependancyName} twice. Please repair your bundle.`;\n    try {\n        if (THREE[dependancyName] === undefined) {\n            THREE[dependancyName] = dependancy;\n            return;\n        }\n\n        if (THREE[dependancyName] !== dependancy) {\n            throw duplicationMessage;\n        }\n    } catch (error) {\n        if (error !== duplicationMessage) {\n            console.warn(\n                `${packageName}: Duplication check unavailable.` + error\n            );\n        } else {\n            throw error;\n        }\n    }\n}\n\nexport function checkThreeRevision(packageName, revision) {\n    if (THREE.REVISION != revision) {\n        console.error(\n            `${packageName} depends on THREE revision ${revision}, but current revision is ${THREE.REVISION}.`\n        );\n    }\n}\n","import {Ray, Vector3} from \"@dualbox/three\";\n\n\nRay.prototype.intersectsConeFrustum = function () {\n\n    const D = new Vector3();\n    const target2 = new Vector3();\n    const u = new Vector3();\n\n    return function ( frustum, target ) {\n\n        if ( target == null )\n            target = target2;\n\n        const deltaR = frustum.radius1 - frustum.radius0;\n        const r = 1 + Math.pow( deltaR / frustum.height, 2 );\n        const R = frustum.radius0 * deltaR / frustum.height;\n\n        D.subVectors( this.origin, frustum.base );\n        const DdA = D.dot( frustum.axis );\n        const DdD = D.dot( D );\n        const VdA = this.direction.dot( frustum.axis );\n        const VdD = this.direction.dot( D );\n        const VdV = this.direction.dot( this.direction );\n\n        const c0 = frustum.radius0 * frustum.radius0 + 2 * R * DdA + r * DdA * DdA - DdD;\n        const c1 = R * VdA + r * DdA * VdA - VdD;\n        const c2 = r * VdA * VdA - VdV;\n\n        if ( c2 !== 0 ) {\n\n            const discr = c1 * c1 - c2 * c0;\n\n            if ( discr < 0 )\n                return null;\n\n            else if ( discr === 0 ) {\n\n                const t = - c1 / c2;\n                u.copy( D );\n                u.addScaledVector( this.direction, t );\n                const d = frustum.axis.dot( u );\n\n                if ( t >= 0 && d >= 0 && d <= frustum.height ) {\n\n                    target2.addVectors( frustum.base, u );\n                    target.copy( target2 );\n                    return target2;\n\n                }\n\n            } else {\n\n                let quantity = 0;\n                const root = Math.sqrt( discr );\n\n                const t0 = ( - c1 - root ) / c2;\n                u.copy( D );\n                u.addScaledVector( this.direction, t0 );\n                let d = frustum.axis.dot( u );\n\n                if ( t0 >= 0 && d >= 0 && d <= frustum.height ) {\n\n                    target2.addVectors( frustum.base, u );\n                    quantity ++;\n\n                }\n\n                const t1 = ( - c1 + root ) / c2;\n                u.copy( D );\n                u.addScaledVector( this.direction, t1 );\n                d = frustum.axis.dot( u );\n\n                if ( t1 >= 0 && ( quantity === 0 || t0 > t1 ) && d >= 0 && d <= frustum.height ) {\n\n                    target2.addVectors( frustum.base, u );\n                    quantity ++;\n\n                }\n\n                if ( quantity ) target.copy( target2 );\n                return quantity ? target2 : null;\n\n            }\n\n        } else if ( c1 !== 0 ) {\n\n            const t = - 2 * c0 / c1;\n            u.copy( D );\n            u.addScaledVector( this.direction, t );\n            const d = frustum.axis.dot( u );\n\n            if ( t >= 0 && d >= 0 && d <= frustum.height ) {\n\n                target2.addVectors( frustum.base, u );\n                target.copy( target2 );\n                return target;\n\n            }\n\n        }\n\n        return null;\n\n    };\n\n}();\n","import {Box3, Vector3, Matrix4, BoxBufferGeometry, BufferAttribute} from \"@dualbox/three\";\n\nconst tmpVec = new Vector3(), tmpVec1 = new Vector3(), tmpVec2 = new Vector3(), tmpVec3 = new Vector3();\nconst tmpMat = new Matrix4();\nconst baseCubePositions = new BoxBufferGeometry( 2, 2, 2 ).toNonIndexed().attributes.position;\n\n/**\n * @author Max Godefroy <max@godefroy.net>\n */\n\n\nexport class ConeFrustum {\n\n\t/**\n     * @param base      {?Vector3}\n     * @param axis      {?Vector3}\n     * @param height    {?number}\n     * @param radius0   {?number}\n     * @param radius1   {?number}\n     */\n\tconstructor( base, axis, height, radius0, radius1 ) {\n\n\t\tthis.base = base || new Vector3();\n\n\t\tthis.axis = axis || new Vector3( 0, 1, 0 );\n\t\tthis.axis.normalize();\n\n\t\tthis.height = height || 1;\n\t\tthis.radius0 = radius0 || 0;\n\t\tthis.radius1 = radius1 || 0;\n\n\t}\n\n\n\t/**\n     * @param center0   {!Vector3}\n     * @param radius0   {number}\n     * @param center1   {!Vector3}\n     * @param radius1   {number}\n     * @returns {ConeFrustum}\n     */\n\tstatic fromCapsule( center0, radius0, center1, radius1 ) {\n\n\t\tif ( radius0 > radius1 )\n\t\t\treturn this.fromCapsule( center1, radius1, center0, radius0 );\n\n\t\tconst axis = new Vector3().subVectors( center1, center0 );\n\n\t\tif ( axis.length() === 0 )\n\t\t\tthrow \"Capsule height must not be zero\";\n\n\t\tconst sinTheta = ( radius1 - radius0 ) / axis.length();\n\t\tconst height = axis.length() + sinTheta * ( radius0 - radius1 );\n\t\tconst base = new Vector3().copy( center0 ).addScaledVector( axis.normalize(), - sinTheta * radius0 );\n\t\tconst cosTheta = Math.cos( Math.asin( sinTheta ) );\n\n\t\treturn new ConeFrustum( base, axis, height, radius0 * cosTheta, radius1 * cosTheta );\n\n\t}\n\n\t/**\n     *  Project the given point on the axis, in a direction orthogonal to the cone frustum surface.\n     **/\n\torthogonalProject( p, target ) {\n\n\t\t// We will work in 2D, in the orthogonal basis x = this.axis and y = orthogonal vector to this.axis in the plane (this.basis, p, this.basis + this.axis),\n\t\t// and such that p has positive y coordinate in this basis.\n\t\t// The wanted projection is the point at the intersection of:\n\t\t//  - the local X axis (computation in the unit_dir basis)\n\t\t//  and\n\t\t//  - the line defined by P and the vector orthogonal to the weight line\n\t\tconst baseToP = tmpVec;\n\t\tbaseToP.subVectors( p, this.base );\n\t\tconst baseToPlsq = baseToP.lengthSq();\n\t\tconst p2Dx = baseToP.dot( this.axis );\n\t\t// pythagore inc.\n\t\tconst p2DySq = baseToPlsq - p2Dx * p2Dx;\n\t\tconst p2Dy = p2DySq > 0 ? Math.sqrt( p2DySq ) : 0; // because of rounded errors tmp can be <0 and this causes the next sqrt to return NaN...\n\n\t\tconst t = p2Dx - p2Dy * ( this.radius0 - this.radius1 ) / this.height;\n\n\t\ttarget.copy( this.axis ).multiplyScalar( t ).add( this.base );\n\n\t}\n\n\t/**\n     * @param frustum   {!ConeFrustum}\n     */\n\tcopy( frustum ) {\n\n\t\tthis.base = frustum.base.clone();\n\t\tthis.axis = frustum.axis.clone();\n\t\tthis.height = frustum.height;\n\t\tthis.radius0 = frustum.radius0;\n\t\tthis.radius1 = frustum.radius1;\n\n\t}\n\n\n\tclone() {\n\n\t\treturn new ConeFrustum().copy( this );\n\n\t}\n\n\n\tempty() {\n\n\t\treturn this.height === 0 || ( this.radius0 === 0 && this.radius1 === 0 );\n\n\t}\n\n\n\t/**\n     * @param target    {?Box3}\n\t * @returns {!Box3}\n     */\n\tgetBoundingBox( target ) {\n\n\t\tconst c = this.base.clone();\n\t\tconst d = new Vector3();\n\n\t\td.set(\n\t\t\tMath.sqrt( 1.0 - this.axis.x * this.axis.x ),\n\t\t\tMath.sqrt( 1.0 - this.axis.y * this.axis.y ),\n\t\t\tMath.sqrt( 1.0 - this.axis.z * this.axis.z ),\n\t\t);\n\t\td.multiplyScalar( this.radius0 );\n\n\t\tconst box1 = new Box3( new Vector3().subVectors( c, d ), new Vector3().addVectors( c, d ) );\n\n\t\td.divideScalar( this.radius0 );\n\t\td.multiplyScalar( this.radius1 );\n\n\t\tc.addScaledVector( this.axis, this.height );\n\t\tconst box2 = new Box3( new Vector3().subVectors( c, d ), new Vector3().addVectors( c, d ) );\n\n\t\tbox1.union( box2 );\n\n\t\tif ( target != null )\n\t\t\ttarget.copy( box1 );\n\n\t\treturn box1;\n\n\t}\n\n\n\t/**\n\t * @deprecated Use `ConeFrustum.computeOptimisedDownscalingBoundingCube` instead\n\t *\n\t * @param {!Vector3} origin\t\tThe origin for the current coordinate space\n\t *\n     * @returns {Float32Array} \t\tThe cube position vertex coordinates as a flat array\n     */\n\tcomputeOptimisedBoundingCube( origin ) {\n\n\t    const attribute = baseCubePositions.clone();\n\n\t\tconst r = Math.max( this.radius0, this.radius1 );\n\t\ttmpMat.makeScale( r, this.height / 2, r );\n\t\tattribute.applyMatrix4( tmpMat );\n\n\t\ttmpVec.set( 0, 1, 0 );\n\t\tconst angle = tmpVec.angleTo( this.axis );\n\t\ttmpVec.cross( this.axis ).normalize();\n\t\tif ( tmpVec.length() > 0 ) {\n\n\t\t\ttmpMat.makeRotationAxis( tmpVec, angle );\n\t\t\tattribute.applyMatrix4( tmpMat );\n\n\t\t}\n\n\t\ttmpVec.copy( this.base ).addScaledVector( this.axis, this.height / 2 ).sub( origin );\n\t    tmpMat.makeTranslation( tmpVec.x, tmpVec.y, tmpVec.z );\n\t    attribute.applyMatrix4( tmpMat );\n\n\t    return attribute.array;\n\n\t}\n\n\n\t/**\n\t * @param {!Vector3} center0\n\t * @param {!number} radius0\n\t * @param {!Vector3} center1\n\t * @param {!number} radius1\n\t * @param {?Vector3} origin\t\tThe origin for the current coordinate space. Can be null.\n\t * @param {?number} minScale\n\t *\n\t * @returns {Float32Array} \t\tThe cube position vertex coordinates as a flat array\n\t */\n\tstatic computeOptimisedDownscalingBoundingCube( center0, radius0, center1, radius1, origin, minScale ) {\n\n\t\tif ( radius0 > radius1 )\n\t\t\treturn this.computeOptimisedDownscalingBoundingCube( center1, radius1, center0, radius0, origin, minScale );\n\n\t\tconst facePositionsArray = new Float32Array( [\n\t\t\t// Smaller face\n\t\t\t- 1, - 1, - 1,\n\t\t\t  1, - 1, - 1,\n\t\t\t- 1, - 1,   1,\n\t\t\t  1, - 1,   1,\n\n\t\t\t// Intermediate face\n\t\t\t- 1, 1, - 1,\n\t\t\t  1, 1, - 1,\n\t\t\t- 1, 1,   1,\n\t\t\t  1, 1,   1,\n\n\t\t\t// Bigger face\n\t\t\t- 1, 1, - 1,\n\t\t\t  1, 1, - 1,\n\t\t\t- 1, 1,   1,\n\t\t\t  1, 1,   1,\n\t\t] );\n\n\t\tconst indexes = [\n\t\t\t// Small face\n\t\t\t0, 1, 3,\t\t0, 3, 2,\n\n\t\t\t// Small to intermediate faces\n\t\t\t6, 4, 0,\t\t6, 0, 2,\n\t\t\t7, 6, 2,\t\t7, 2, 3,\n\t\t\t5, 7, 3,\t\t5, 3, 1,\n\t\t\t4, 5, 1,\t\t4, 1, 0,\n\n\t\t\t// Intermediate to big faces\n\t\t\t10, 8, 4,\t\t10, 4, 6,\n\t\t\t11, 10, 6,\t\t11, 6, 7,\n\t\t\t9, 11, 7,\t\t 9, 7, 5,\n\t\t\t8, 9, 5,\t\t 8, 5, 4,\n\n\t\t\t// Big face\n\t\t\t9, 8, 10,\t\t9, 10, 11,\n\t\t];\n\n\t\tconst toPositions = function () {\n\n\t\t\tconst positions = new Float32Array( indexes.length * 3 );\n\t\t\tfor ( let i = 0; i < indexes.length; i ++ ) {\n\n\t\t\t\tconst p = indexes[ i ] * 3;\n\t\t\t\tpositions[ 3 * i ] = facePositionsArray[ p ];\n\t\t\t\tpositions[ 3 * i + 1 ] = facePositionsArray[ p + 1 ];\n\t\t\t\tpositions[ 3 * i + 2 ] = facePositionsArray[ p + 2 ];\n\n\t\t\t}\n\n\t\t\treturn positions;\n\n\t\t};\n\n\t\tconst tmpVec1 = new Vector3().subVectors( center1, center0 );\n\n\t\tif ( tmpVec1.length() === 0 )\n\t\t\tthrow \"Capsule height must not be zero\";\n\n\t\tconst sinTheta = ( radius1 - radius0 ) / tmpVec1.length();\n\n\t\tif ( Math.abs( sinTheta ) >= 1 / minScale * 0.9999 ) {\n\n\t\t\ttmpVec1.addVectors( center0, center1 ).multiplyScalar( 0.5 );\n\t\t\tfor ( let i = 0; i < facePositionsArray.length; i += 3 ) {\n\n\t\t\t\tfacePositionsArray[ i ] = tmpVec1.x;\n\t\t\t\tfacePositionsArray[ i + 1 ] = tmpVec1.y;\n\t\t\t\tfacePositionsArray[ i + 2 ] = tmpVec1.z;\n\n\t\t\t}\n\n\t\t\treturn toPositions();\n\n\t\t} else if ( Math.abs( sinTheta ) > 1 )\n\t\t\treturn this.computeOptimisedDownscalingBoundingCube( center0, minScale * radius0, center1, minScale * radius1, origin, 1 );\n\n\t\tconst cosTheta = Math.cos( Math.asin( sinTheta ) );\n\t\tconst height = tmpVec1.length() + sinTheta * ( radius0 - ( minScale * minScale ) * radius1 );\n\t\tconst unscaledHeight = tmpVec1.length() + sinTheta * ( radius0 - radius1 );\n\t\ttmpVec2.copy( center0 ).addScaledVector( tmpVec1.normalize(), - sinTheta * radius0 );\n\n\t\tconst r0 = radius0 * cosTheta;\n\t\tconst r1 = radius1 * cosTheta;\n\n\t\tlet s = r1 > 0 ? r0 / r1 : 1;\n\t\tfor ( let i = 0; i < 12; i += 3 ) {\n\n\t\t\tfacePositionsArray[ i ] *= s;\n\t\t\tfacePositionsArray[ i + 2 ] *= s;\n\n\t\t}\n\n\t\ts = Math.cos( Math.asin( minScale * sinTheta ) ) * radius1 * minScale / r1;\n\t\tfor ( let i = 24; i < 36; i += 3 ) {\n\n\t\t\tfacePositionsArray[ i ] *= s;\n\t\t\tfacePositionsArray[ i + 2 ] *= s;\n\n\t\t}\n\n\t\tconst newY = 2 * unscaledHeight / height - 1;\n\t\tfor ( let i = 12; i < 24; i += 3 )\n\t\t\tfacePositionsArray[ i + 1 ] = newY;\n\n\t\tconst attribute = new BufferAttribute( toPositions(), 3 );\n\n\t\ttmpMat.makeScale( r1, height / 2, r1 );\n\t\tattribute.applyMatrix4( tmpMat );\n\n\t\ttmpVec.set( 0, 1, 0 );\n\t\tconst angle = tmpVec.angleTo( tmpVec1 );\n\t\tconst dot = tmpVec.dot( tmpVec1 );\n\t\ttmpVec.cross( tmpVec1 ).normalize();\n\t\tif ( tmpVec.length() > 0 ) {\n\n\t\t\ttmpMat.makeRotationAxis( tmpVec, angle );\n\t\t\tattribute.applyMatrix4( tmpMat );\n\n\t\t} else if ( dot < 0 ) {\n\n\t\t\ttmpMat.makeRotationZ( Math.PI );\n\t\t\tattribute.applyMatrix4( tmpMat );\n\n\t\t}\n\n\t\tif ( origin != null ) {\n\n\t\t\ttmpVec.copy( tmpVec2 ).addScaledVector( tmpVec1, height / 2 ).sub( origin );\n\t\t\ttmpMat.makeTranslation( tmpVec.x, tmpVec.y, tmpVec.z );\n\t\t\tattribute.applyMatrix4( tmpMat );\n\n\t\t}\n\n\t\treturn attribute.array;\n\n\t}\n\n\n\t/**\n     * @param frustum   {!ConeFrustum}\n     * @returns {boolean}\n     */\n\tequals( frustum ) {\n\n\t\treturn this.base.equals( frustum.base ) &&\n            this.axis.equals( frustum.axis ) &&\n            this.height === frustum.height &&\n            this.radius0 === frustum.radius0 &&\n            this.radius1 === frustum.radius1;\n\n\t}\n\n}\n","/*\n * This file encapsulates the xthree library.\n * It checks if the needed three examples and the library are duplicated.\n */\nimport { checkDependancy, checkThreeRevision } from \"three-js-checker\";\n\n// Duplication check\n\nimport { ConeFrustum } from \"./exports.js\";\n\nconst PACKAGE_NAME = \"three-js-cone-frustum\";\n\ncheckThreeRevision(PACKAGE_NAME, 130);\n\ncheckDependancy(PACKAGE_NAME, \"ConeFrustum\", ConeFrustum);\n\n// Reexport API\n\nexport * from \"./exports\";\n"],"names":["Ray","Vector3","Matrix4","BoxBufferGeometry","Box3","BufferAttribute"],"mappings":"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"}